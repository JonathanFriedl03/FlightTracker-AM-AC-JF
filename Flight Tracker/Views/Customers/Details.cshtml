@model Flight_Tracker.Models.Customer

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Details</h1>

<div>
    <h4>Customer</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FirstName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.LastName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.LastName)
        </dd>
        @*<dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.UserName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.UserName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Email)
        </dd>*@
       
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
<h2>Map</h2>
<style>
    /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
    #map {
        height: 400px;
        width: 700px;   
    }
</style>

    <div class="row">
        <div id="map">
            <script>
                function initMap() {
                    var markerArray = [];
       
                    var start = { lat:@Model.startLatitude, lng: @Model.startLongitude};
                    var end = { lat:@Model.endLatitude, lng: @Model.endLongitude};
        
                    var directionsService = new google.maps.DirectionsService();
                    var directionsRenderer = new google.maps.DirectionsRenderer();//{ map: map }
                    
                    //var startingLocation = new google.maps.LatLng(start);
                   // var mapOptions = {
                    var map = new google.maps.Map(document.getElementById('map'), {
                        zoom: 7,
                        center: start
                    });
                    directionsRenderer.setMap(map);
                    calcRoute(directionsService, directionsRenderer) {
                        directionsService.route(
                            {
                                origin: start,
                                destination: end
                            },
                            function (response, status) {
                                if (status == 'OK') {
                                    directionsRenderer.setDirections(response);
                                } else {
                                    window.alert('Directions request failed due to ' + status);
                                }
                            });
                    }
                    calcRoute(directionsService, directionsRenderer) {
                        directionsService.route(
                            {
                                origin: start,
                                destination: end
                            },
                            function (response, status) {
                                if (status == 'OK') {
                                    directionsRenderer.setDirections(response);
                                } else {
                                    window.alert('Directions request failed due to ' + status);
                                }
                            });
                    }

                   

                    
                    }
                  
                   
                 //calcRoute(directionsService, directionsRenderer) {
                 //   directionsService.route(
                 //       {
                 //           origin: start,
                 //           destination: end
                 //       },
                 //       function (response, status) {
                 //           if (status == 'OK') {
                 //               directionsRenderer.setDirections(response);
                 //           } else {
                 //               window.alert('Directions request failed due to ' + status);
                 //           }                        
                 //       });
                 //   } 
                            
                            //travelmode: 'DRIVING'
                   
                
            </script>
            <script async defer src="https://maps.googleapis.com/maps/api/js?key=@APIKeys.GoogleAPI&callback=initMap"
                    ></script>
        </div>
    </div>
